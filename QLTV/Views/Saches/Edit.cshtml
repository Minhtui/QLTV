@model QLTV.Models.Sach
@using QLTV.Models

@{
    ViewBag.Title = "Edit";
}

<h2>Chỉnh sửa</h2>


@using (Html.BeginForm("Edit", "Saches", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Sách</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Masach)

        <div class="form-group">
            @Html.LabelFor(model => model.Maloaisach, "Mã loại sách", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Maloaisach", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Maloaisach, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tensach,"Tên sách", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tensach, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tensach, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tacgia,"Tác giả", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tacgia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tacgia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NXB,"Nhà xuất bản", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NXB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NXB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Namxuatban,"Năm xuất bản", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Namxuatban, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Namxuatban, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Soluong,"Số lượng", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Soluong, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Soluong, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hinh,"Hình ảnh", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Hinh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hinh, "", new { @class = "text-danger" })*@

                @Html.Image("../../" + Model.Hinh, "", "100")
                @Html.TextBox("HinhUpload", "", new { type = "file" })
                @Html.Hidden("Hinh")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Trở về danh mục sách", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
